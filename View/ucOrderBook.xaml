<UserControl x:Class="VisualHFT.View.ucOrderBook"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:VisualHFT.View"
             xmlns:Formatters="clr-namespace:VisualHFT.Converters"
             xmlns:ViewModel="clr-namespace:VisualHFT.ViewModel"
             xmlns:oxyplot="http://oxyplot.org/wpf"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:userControls="clr-namespace:VisualHFT.UserControls"
             d:DataContext="{d:DesignInstance Type=ViewModel:vmOrderBook}"
             mc:Ignorable="d"  
             xmlns:opentk="clr-namespace:OpenTK.Wpf;assembly=GLWpfControl"  
Loaded="UserControl_Loaded"
             FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
            d:DesignHeight="776" d:DesignWidth="873" MinWidth="300" 
             
             >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../GlobalStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Formatters:ConverterValueToWidth x:Key="ValueToWidthConverter" />

            <DataTemplate x:Key="View1Template" DataType="{x:Type ViewModel:vmOrderBook}">
                <local:ucDepth />
            </DataTemplate>
            <DataTemplate x:Key="View2Template" DataType="{x:Type ViewModel:vmOrderBook}">
                <local:ucDepth1 />
            </DataTemplate>
            <DataTemplate x:Key="View3Template" DataType="{x:Type ViewModel:vmOrderBook}">
                <local:ucDepth2 />
            </DataTemplate>

            <CollectionViewSource x:Key="ProviderView" Source="{Binding Providers}">
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="ProviderName" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource x:Key="SymbolView" Source="{Binding SymbolList}">
            </CollectionViewSource>

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid VerticalAlignment="Stretch">
        <Grid.Resources>
            <Formatters:KiloFormatter x:Key="KiloFormatter"/>
            <Formatters:ConverterIsBuyToColor x:Key="IsBuyConverter" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450" />
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="270" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MaxHeight="200" />
            <RowDefinition Height="350" />
            <RowDefinition Height="350" />
        </Grid.RowDefinitions>


        <!--PROVIDER & SYMBOL-->
        <Grid Grid.Column="0" Grid.RowSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}">
            <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto">
                <!--SELECT PROVIDER-->
                <GroupBox Style="{StaticResource MaterialDesignCardGroupBox}" Header="Provider/Symbol" BorderBrush="#DBD0C6" VerticalAlignment="Top" DockPanel.Dock="Top" >
                    <StackPanel>
                        <TextBlock Text="Aggregation:" VerticalAlignment="Center" Margin="0,0,10,0"/>
                        <ComboBox ItemsSource="{Binding AggregationLevels}" 
                                  DisplayMemberPath="Item1" 
                                  SelectedValuePath="Item2" 
                                  SelectedValue="{Binding AggregationLevelSelection}" 
                                  HorizontalAlignment="Stretch" Margin="10,10,0,10" VerticalAlignment="Top" FontSize="18"
                                  />


                        <ComboBox ItemsSource="{Binding Source={StaticResource ProviderView}}" SelectedItem="{Binding SelectedProvider}" DisplayMemberPath="ProviderName" HorizontalAlignment="Stretch" Margin="10,10,0,10" VerticalAlignment="Top" FontSize="18"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource SymbolView}}" SelectedItem="{Binding SelectedSymbol}" HorizontalAlignment="Stretch" Margin="10,10,0,10" VerticalAlignment="Top" FontSize="18"/>
                    </StackPanel>
                </GroupBox>
                <Grid>
                    <Button x:Name="butPopSymbol" ToolTip="Open this section into a new popup-Window" Click="butPopSymbol_Click" HorizontalAlignment="Right" VerticalAlignment="Top" Panel.ZIndex="999" Margin="0" Padding="0" Height="20" Width="20">
                        <Image Source="/Images/pop-up.png" />
                    </Button>
                    <Grid x:Name="grdSymbol" VerticalAlignment="Stretch" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="200"/>
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--BID/ASK Prices BOX-->
                        <GroupBox x:Name="grpSymbol" Grid.Row="0" 
                                  Style="{StaticResource MaterialDesignCardGroupBox}" 
                                  Header="{Binding SelectedSymbol}" BorderBrush="#DBD0C6" FontSize="26" 
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <!--BID-->
                                <Grid Margin="5" Grid.Column="0" Background="#434D4C">
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="#39AEDD"/>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="60"  />
                                        <RowDefinition Height="20" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding BidTOB_SPLIT.Rest, Mode=OneWay}" FontFamily="Verdana" FontWeight="Bold" FontSize="25"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="5,0,0,0" />
                                    <TextBlock Text="{Binding BidTOB_SPLIT.NextTwoDecimals, Mode=OneWay}" FontFamily="Verdana" FontWeight="Bold" FontSize="54" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                                    <TextBlock Text="{Binding BidTOB_SPLIT.LastDecimal, Mode=OneWay}"  FontFamily="Verdana" FontWeight="Bold" FontSize="26"  Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,3,8" />
                                    <TextBlock Text="{Binding BidTOB_SPLIT.Size, Mode=OneWay}"  FontFamily="Verdana" FontWeight="Bold" FontSize="18"  Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Bottom"  />
                                </Grid>
                                <!--ASK-->
                                <Grid Margin="5" Grid.Column="1" Background="#434D4C">
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="#39AEDD"/>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="60" />
                                        <RowDefinition Height="20" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding AskTOB_SPLIT.Rest, Mode=OneWay}" FontFamily="Verdana" FontWeight="Bold" FontSize="25"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="5,0,0,0"/>
                                    <TextBlock Text="{Binding AskTOB_SPLIT.NextTwoDecimals, Mode=OneWay}" FontFamily="Verdana" FontWeight="Bold" FontSize="54" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                                    <TextBlock Text="{Binding AskTOB_SPLIT.LastDecimal, Mode=OneWay}"  FontFamily="Verdana" FontWeight="Bold" FontSize="26"  Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,3,8" />
                                    <TextBlock Text="{Binding AskTOB_SPLIT.Size, Mode=OneWay}" FontFamily="Verdana" FontWeight="Bold" FontSize="18"  Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Bottom"  />
                                </Grid>
                                <Grid Grid.Column="0" Grid.ColumnSpan="2" Margin="0 0 0 0" VerticalAlignment="Bottom" >
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="FontFamily" Value="Verdana"/>
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="FontSize" Value="16" />
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                        </Style>
                                    </Grid.Resources>
                                    <Border BorderBrush="WhiteSmoke" BorderThickness="2" Height="25" Width="80" Background="#434D4C"  >
                                        <TextBlock Text="{Binding Spread, Mode=OneWay, StringFormat=N}" />
                                    </Border>

                                </Grid>
                            </Grid>
                        </GroupBox>
                        <!--LOB IMBALANCE-->
                        <Button Grid.Row="1" x:Name="butPopImbalances" ToolTip="Open this section into a new popup-Window" Click="butPopImbalances_Click" HorizontalAlignment="Right" VerticalAlignment="Top" Panel.ZIndex="999" Margin="0,0,0,0" Padding="0" Height="10" Width="10">
                            <Image Source="/Images/pop-up.png" />
                        </Button>
                        <Grid Grid.Row="1" x:Name="GaugeGrid" Cursor="Hand" MouseLeftButtonDown="butPopImbalances_Click" ToolTip="Limit Order Book Imbalance&#x0a;This metric measures the difference between the number of buy and sell orders in the market.&#x0a;It can provide insights into the supply and demand dynamics in the market.&#x0a;&#x0a;A positive order imbalance (more buy orders than sell orders) can indicate upward pressure on prices, while a negative order imbalance (more sell orders than buy orders) can indicate downward pressure on prices.">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="6*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <Grid.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="Red" Offset="0.0" />
                                    <GradientStop Color="White" Offset="0.2" />
                                    <GradientStop Color="White" Offset="0.8" />
                                    <GradientStop Color="Red" Offset="1.0" />
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Canvas Grid.Column="1">
                                <Path Fill="Black" Data="M 0 10 L 5 0 L 10 10 Z">
                                    <Canvas.Left>
                                        <MultiBinding Converter="{StaticResource ValueToWidthConverter}">
                                            <Binding Path="LOBImbalanceValue" Mode="OneWay" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </Canvas.Left>
                                </Path>
                            </Canvas>
                        </Grid>
                        <!--DATAGRID BID/ASK-->
                        <Grid Grid.Row="2" Grid.Column="0" VerticalAlignment="Stretch" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="5" />
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Button Visibility="Collapsed" Grid.Row="0" x:Name="butDepthView1" Command="{Binding}" CommandParameter="DepthView1" ToolTip="Change depth view" HorizontalAlignment="Left" Margin="0,0,0,0" Padding="0" Width="25" Height="25" VerticalAlignment="Top" Click="butDepthView1_Click">
                                <Image Source="/Images/imgDepth.png" />
                            </Button>
                            <Button Visibility="Collapsed" Grid.Row="0" x:Name="butDepthView2" Command="{Binding}" CommandParameter="DepthView2" ToolTip="Change depth view" HorizontalAlignment="Left" Margin="27,0,0,0" Padding="0" Width="25" Height="25" VerticalAlignment="Top" Click="butDepthView2_Click">
                                <Image Source="/Images/imgDepth1.png" />
                            </Button>
                            <Button Visibility="Collapsed" Grid.Row="0" x:Name="butDepthView3" Command="{Binding}" CommandParameter="DepthView3" ToolTip="Change depth view" HorizontalAlignment="Left" Margin="54,0,0,0" Padding="0" Width="25" Height="25" VerticalAlignment="Top" Click="butDepthView3_Click">
                                <Image Source="/Images/imgDepth2.png" />
                            </Button>

                            <ContentControl Content="{Binding }" Grid.Row="1">
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SwitchView}" Value="0">
                                                <Setter Property="ContentTemplate" Value="{StaticResource View1Template}" />
                                            </DataTrigger>
                                          
                                            <!--<DataTrigger Binding="{Binding SwitchView}" Value="1">
                                                <Setter Property="ContentTemplate" Value="{StaticResource View2Template}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SwitchView}" Value="2">
                                                <Setter Property="ContentTemplate" Value="{StaticResource View3Template}" />
                                            </DataTrigger>-->
                                       
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </Grid>

                    </Grid>

                </Grid>

            </DockPanel>
        </Grid>

        <!--LOB CUMULATIVER CHART-->
        <Grid Grid.Column="1" Grid.Row="0" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--CUMMULATIVE BIDS-->
            <oxyplot:PlotView 
                Grid.Column="0"
                HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                IsEnabled="False"
                IsMouseWheelEnabled="False"
                Style="{StaticResource BaseChartStyle}"
                Model="{Binding CummulativeBidsChartModel, Mode=OneWay}" >
            </oxyplot:PlotView>
            <!--CUMMULATIVE ASKS-->
            <oxyplot:PlotView 
                Grid.Column="1"
                HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                IsEnabled="False"
                IsMouseWheelEnabled="False"
                Style="{StaticResource BaseChartStyle}"
                Model="{Binding CummulativeAsksChartModel, Mode=OneWay}" >
            </oxyplot:PlotView>

            <Border Margin="0, 10, 0, 120" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Background="#20FFFFFF" CornerRadius="10" Height="60">
                <StackPanel Orientation="Vertical" VerticalAlignment="Center" >
                    <TextBlock Text="{Binding MidPoint, StringFormat={}{0:N}}" FontSize="20" HorizontalAlignment="Center" />
                    <Rectangle Height="1" Width="250" Fill="White" Margin="5,0" />
                    <Label Content="Mid Price" FontSize="12"  HorizontalContentAlignment="Center" />
                </StackPanel>
            </Border>
        </Grid>
        <!--END LOB CUMULATIVER CHART-->

        <!--PRICE CHART-->
        <Grid Grid.Column="1" Grid.Row="1" VerticalAlignment="Stretch" >
            <Button x:Name="butPopPriceChart" ToolTip="Open this section into a new popup-Window" Click="butPopPriceChart_Click" HorizontalAlignment="Right" VerticalAlignment="Top" Panel.ZIndex="999" Margin="0,0,50,0" Padding="0" Height="20" Width="20">
                <Image Source="/Images/pop-up.png" />
            </Button>
            <Grid>
                <Grid.ToolTip>
                    <ToolTip Placement="Mouse">
                        <StackPanel>
                            <TextBlock FontWeight="Bold" Text="Real-time prices"/>
                            <TextBlock Text="• Red Line = Best offer price."/>
                            <TextBlock Text="• Green Line = Best bid price."/>
                            <TextBlock Text="• Gray Line = Mid price."/>
                            <TextBlock Text="• Red dots: resting Sell orders."/>
                            <TextBlock Text="• Green dots: resting Buy orders."/>
                        </StackPanel>
                    </ToolTip>
                </Grid.ToolTip> 
                <opentk:GLWpfControl Name="glControl" Visibility="Visible" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   /> 

                <oxyplot:PlotView 
                    x:Name="chtPrice" 
                    Visibility="Collapsed"    
                    VirtualizingPanel.IsVirtualizing="True"
                    VirtualizingPanel.VirtualizationMode="Recycling"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                    IsEnabled="False"
                    IsMouseWheelEnabled="False" 
                    Style="{StaticResource BaseChartStyle}" 
                    Model="{Binding RealTimePricePlotModel, Mode=OneWay}" >
                </oxyplot:PlotView>


            </Grid>
        </Grid>
        <!--END PRICE CHART-->

        <!--SPREAD CHART-->
        <Grid Grid.Column="1" Grid.Row="2" VerticalAlignment="Stretch" >
            <Button x:Name="butPopSpreadChart" ToolTip="Open this section into a new popup-Window" Click="butPopSpreadChart_Click" HorizontalAlignment="Right" VerticalAlignment="Top" Panel.ZIndex="999" Margin="0,0,50,0" Padding="0" Height="20" Width="20">
                <Image Source="/Images/pop-up.png" />
            </Button>


            <opentk:GLWpfControl Name="glControlRealTimeSpread" Visibility="Visible" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

            <oxyplot:PlotView 
                x:Name="chtSpread" 
                Visibility="Collapsed"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                IsEnabled="False"   
                IsMouseWheelEnabled="False"
                Style="{StaticResource BaseChartStyle}"
                Model="{Binding RealTimeSpreadModel, Mode=OneWay}" >
            </oxyplot:PlotView>


        </Grid>
        <!--END SPREAD CHART-->



        <Grid Grid.Column="2" Grid.RowSpan="3" >
            <!--TRADES-->
            <DataGrid ItemsSource="{Binding Path=TradesDisplay, Mode=OneWay}" 
                      AutoGenerateColumns="False" 
                      VerticalAlignment="Top"
                      FontWeight="UltraLight" FontSize="9" FontFamily="Verdana" 


                      Style="{DynamicResource MaterialDesignDataGrid}" 
                      SelectionUnit="FullRow" CanUserDeleteRows="False" CanUserAddRows="False" 
                      ClipboardCopyMode="IncludeHeader" HeadersVisibility="Column" AlternationCount="2" IsReadOnly="True" BorderThickness="0" 
                      CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" 
                      HorizontalScrollBarVisibility="Hidden" IsHitTestVisible="True" 
                      EnableRowVirtualization="True" 
                      EnableColumnVirtualization="False" 
                      VerticalScrollBarVisibility="Auto" 
                        MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" 
                      Padding="0" >
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Height" Value="26" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Price" Binding="{Binding Price, StringFormat=N}" Width="90" HeaderStyle="{DynamicResource RightAlignedHeader}" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{Binding IsBuy, Converter={StaticResource IsBuyConverter}}"/>
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Size" Binding="{Binding Size}" Width="90" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                    <DataGridTextColumn Header="Time" Binding="{Binding Timestamp, StringFormat='{}{0:HH:mm:ss}'}" Width="80" ElementStyle="{DynamicResource RightAligned}"  HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                </DataGrid.Columns>
            </DataGrid>


            <!--END TRADES-->
        </Grid>




    </Grid>

</UserControl>
